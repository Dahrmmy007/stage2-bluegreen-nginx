upstream backend {
    # Primary server - dynamically set based on ACTIVE_POOL
    server app_blue:3000 max_fails=1 fail_timeout=5s;
    
    # Backup server - will take over when primary fails
    server app_green:3000 backup;
}

server {
    listen 80;
    server_name localhost;

    # Aggressive timeouts for fast failover detection
    proxy_connect_timeout 2s;
    proxy_send_timeout 3s;
    proxy_read_timeout 3s;

    location / {
        proxy_pass http://backend;
        
        # CRITICAL: Retry on errors, timeouts, and 5xx within same request
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        proxy_next_upstream_timeout 5s;
        
        # Preserve ALL headers including X-App-Pool and X-Release-Id
        proxy_pass_request_headers on;
        
        # Don't buffer for faster response
        proxy_buffering off;
        
        # Forward client information
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check endpoint for nginx itself
    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}